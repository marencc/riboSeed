geom_bar(stat = "identity", position = "stack")+
facet_wrap(~Assembly, scales = "free_y", nrow = 3)+
theme(legend.position = "none", axis.text.x = element_text(angle = 90, hjust = 1, vjust=.5))
dev.off()
data
write.csv(data,file = paste0(quast_dir, "combined_table.csv" )
write.csv(data,file = paste0(quast_dir, "combined_table.csv"))
write.csv(t(data),file = paste0(quast_dir, "combined_table.csv"))
data.frame("name"=c("Length_all_contigs","length_connected_contigs","length_of_longest_possible_seq", "length_of_shortest_possible_seq",  "length_orphaned_contigs"), "val" = c(10000, 9800, 6700,))
data.frame("name"=c("Length_all_contigs","length_connected_contigs","length_of_longest_possible_seq", "length_of_shortest_possible_seq",  "length_orphaned_contigs"), "val" = c(10000, 9800, 6700,5400, 200))
sample<-data.frame("name"=c("Length_all_contigs","length_connected_contigs","length_of_longest_possible_seq", "length_of_shortest_possible_seq",  "length_orphaned_contigs"), "val" = c(10000, 9800, 6700,5400, 200))
sample$perc<-(sample$val/10000 *100)
sample
ggplot(sample, aes(x=name, y=perc))+geom_bar()
library(ggplot2)
ggplot(sample, aes(x=name, y=perc))+geom_bar()
ggplot(sample, aes(x=name, y=perc))+geom_bar(stat=identity)
ggplot(sample, aes(x=name, y=perc))+geom_bar(stat="identity")
ggplot(sample, aes(x=name, y=perc))+geom_bar(stat="identity")+coord_flip()
ggplot(sample, aes(x=name, y=perc))+geom_bar(stat="identity")+coord_flip()+labs(title= "Total length submitted: 10000bp", x="percentage", y="")
ggplot(sample, aes(x=name, y=perc))+geom_bar(stat="identity")+coord_flip()+labs(title= "Total length submitted: 10000bp", y="percentage", x="")
sample<-data.frame("name"=c("length_connected_contigs","length_of_longest_possible_seq", "length_of_shortest_possible_seq",  "length_orphaned_contigs"), "val" = c(9800, 6700,5400, 200))
sample$perc<-(sample$val/10000 *100)
ggplot(sample, aes(x=name, y=perc))+geom_bar(stat="identity")+coord_flip()+labs(title= "Total length submitted: 10000bp", y="percentage", x="")
teststring<-"if only I could figure out R's regex without 5 trips to SO"
grep()
?grep
twostring<-c(teststring, "another sting to search at the sample time")
twostrings<-c(teststring, "another sting to search at the sample time")
teststring
grep("if", teststring)
grep("if", teststring, value=T)
grep("if", twostrings, value=T)
twostrings
twostrings<-c(teststring, "another string to search at the sample time")
grep("st", twostrings)
grep("ri", twostrings)
grep("ri", twostrings, value=T)
grepl("string", twostrings)
grepl("string", twostrings, value=T)
twostrings[grepl("string", twostrings)]
gsub(".*(regex.*)", "\\1", teststring)
?pie
require(grDevices)
pie(rep(1, 24), col = rainbow(24), radius = 0.9)
require(grDevices)
pie(rep(1, 5), col = rainbow(24), radius = 0.9)
require(grDevices)
pie(c(1,2), col = rainbow(24), radius = 0.9)
require(grDevices)
pie(c(55,2), col = rainbow(24), radius = 0.9)
require(grDevices)
pie(c(55), col = rainbow(24), radius = 0.9)
require(grDevices)
pie(c(some=55, else=4), col = rainbow(24), radius = 0.9)
require(grDevices)
pie(c(some=55, elsew=4), col = rainbow(24), radius = 0.9)
install.packages("biom")
pie(c(Sky = 78, "Sunny side of pyramid" = 17, "Shady side of pyramid" = 5),
init.angle = 315, col = c("deepskyblue", "yellow", "yellow3"), border = FALSE)
require("biom")
min_dense_file   = system.file("extdata", "min_dense_otu_table.biom", package = "biom")
head(min_dense_file)
x1 = read_biom(min_dense_file)
x2 = read_biom(min_sparse_file)
x3 = read_biom(rich_dense_file)
x4 = read_biom(rich_sparse_file)
min_dense_file   = system.file("extdata", "min_dense_otu_table.biom", package = "biom")
min_sparse_file  = system.file("extdata", "min_sparse_otu_table.biom", package = "biom")
rich_dense_file  = system.file("extdata", "rich_dense_otu_table.biom", package = "biom")
rich_sparse_file = system.file("extdata", "rich_sparse_otu_table.biom", package = "biom")
min_dense_file   = system.file("extdata", "min_dense_otu_table.biom", package = "biom")
rich_dense_char  = system.file("extdata", "rich_dense_char.biom", package = "biom")
rich_sparse_char  = system.file("extdata", "rich_sparse_char.biom", package = "biom")
x1 = read_biom(min_dense_file)
x2 = read_biom(min_sparse_file)
x3 = read_biom(rich_dense_file)
x4 = read_biom(rich_sparse_file)
x5 = read_biom(rich_dense_char)
x6 = read_biom(rich_sparse_char)
x1
print(x1)
head(x1)
biom_data(x1)
plot(biom_data(x2))
plot(biom_data(x1))
plot(biom_data(x2))
plot(biom_data(x1))
plot(biom_data(x2))
plot(biom_data(x1))
boxplot(as(biom_data(x4), "vector"))
heatmap(as(biom_data(x4), "matrix"))
install.packages("vegan")
require(vegan)
set.seed(2)
community_matrix=matrix(
sample(1:100,300,replace=T),nrow=10,
dimnames=list(paste("community",1:10,sep=""),paste("sp",1:30,sep="")))
community_matrix
example_NMDS=metaMDS(community_matrix, # Our community-by-species matrix
k=2) # The number of reduced dimensions
example_NMDS$nobj
example_NMDS$nfix
example_NMDS$ndim
example_NMDS$ndis
example_NMDS$diss
str(example_NMDS)
example_NMDS=metaMDS(community_matrix, # Our community-by-species matrix
k=2, trymax = 4) # The number of reduced dimensions
example_NMDS=metaMDS(community_matrix, # Our community-by-species matrix
k=2, trymax = 40) # The number of reduced dimensions
example_NMDS=metaMDS(community_matrix, # Our community-by-species matrix
k=2, trymax = 400) # The number of reduced dimensions
stressplot(example_NMDS)
plot(example_NMDS)
ordiplot(example_NMDS,type="n")
orditorp(example_NMDS,display="species",col="red",air=0.01)
orditorp(example_NMDS,display="sites",cex=1.25,air=0.01)
treat=c(rep("Treatment1",5),rep("Treatment2",5))
ordiplot(example_NMDS,type="n")
ordihull(example_NMDS,groups=treat,draw="polygon",col="grey90",label=F)
orditorp(example_NMDS,display="species",col="red",air=0.01)
orditorp(example_NMDS,display="sites",col=c(rep("green",5),rep("blue",5)),
air=0.01,cex=1.25)
View(community_matrix)
View(t(community_matrix))
dataset<- read.csv2("/media/nicholas/USB DISK/R WD/taxa_biom_table.txt", sep "\t")
dataset<- read.csv2("/media/nicholas/USB DISK/R WD/taxa_biom_table.txt", sep="\t")
dataset
without_names<-dataset[,1:ncols-0]
without_names<-dataset[,1:ncols(dataset)-1]
without_names<-dataset[,1:ncol(dataset)-1]
without_names
str(without_names)
dataset<- read.csv2("/media/nicholas/USB DISK/R WD/taxa_biom_table.txt", sep="\t", stringsAsFactors = F)
without_names<-dataset[,1:ncol(dataset)-1]
str(without_names)
transposed<-t(dataset)
str(transposed)
transposed<-t(without_names)
str(transposed)
transposed<-t(without_names[,1:ncol(without_names)])
str(transposed)
row.names(without_names)<-without_names$OTU_ID
without_names$OTU_ID<-NULL
transposed<-t(without_names)
transposed
view(transposed)
View(transposed)
mds<-metaMDS(transposed, k=2)
stressplot(mds)
stressplot(mds)
plot(mds)
View(without_names)
require(dplyr)
?dplyr::rowwise
?dplyr::filter
?rowsum
??rowsum
rowSums(without_names)
head(rowSums(without_names))
rowSums(without_names)>1
nosingletons<-without_names[rowSums(without_names)>1,]
str(nosingletons)
str(dataset)
View(nosingletons)
nosingletons_t<-t(nosingletons)
head(nosingletons_t)
head(nosingletons)
head(without_names)
head(t(without_names))
head(t(nosingletons))
nosingletons<-without_names[rowSums(without_names)>1,]
dataset<- read.csv2("/media/nicholas/USB DISK/R WD/taxa_biom_table.txt", sep="\t", stringsAsFactors = F)
without_names<-dataset[,1:ncol(dataset)-1]
row.names(without_names)<-without_names$OTU_ID
without_names$OTU_ID<-NULL
### filtering
nosingletons<-without_names[rowSums(without_names)>1,]
nosingletons_t<-t(nosingletons)
nosingletons_t
str(nosingletons_t)
str(nosingletons)
str(without_names)
str(t(without_names))
dataset<- read.csv2("/media/nicholas/USB DISK/R WD/taxa_biom_table.txt", sep="\t", stringsAsFactors = F)
without_names<-dataset[,1:ncol(dataset)-1]
str(without_names)
row.names(without_names)<-without_names$OTU_ID
without_names$OTU_ID<-NULL
str(without_names)
str(t(without_names))
head(t(without_names))
nosingletons<-without_names[rowSums(without_names)>1,]
nosingletons_t<-t(nosingletons)
View(nosingletons_t)
nos_mds<-metaMDS(nosingletons_t, k=2)
stressplot(nos_mds)
stressplot(nos_mds)
plot(mds)
nosingletons<-without_names[rowSums(without_names)>100,]
nosingletons_t<-t(nosingletons)
nos_mds<-metaMDS(nosingletons_t, k=2)
stressplot(nos_mds)
plot(mds)
nosingletons<-without_names[rowSums(without_names)>1000,]
nosingletons_t<-t(nosingletons)
nos_mds<-metaMDS(nosingletons_t, k=2)
stressplot(nos_mds)
plot(mds)
require(data.table)
setwd("~/")
raw_summaries<-fread("assembly_summary.txt", skip = 1)
View(raw_summaries)
full<-raw_summaries[raw_summaries$genome_rep == "Full"]
table(full$assembly_level)
complete<- full[!full$assembly_level %in% c("Contig"),]
table(full$excluded_from_refseq)
not_excluded<-complete[complete$excluded_from_refseq == "",]
search_term<-"Escherichia"
of_interest <-not_excluded[grepl(search_term, not_excluded$organism_name),]
View(of_interest)
complete<- full[!full$assembly_level %in% c("Contig", "Scaffold"),]
not_excluded<-complete[complete$excluded_from_refseq == "",]
of_interest <-not_excluded[grepl(search_term, not_excluded$organism_name),]
View(of_interest)
write.csv(of_interest, file = "genomes_of_interest.csv")
write.csv(of_interest$ftp_path, file = "genomes_of_interest.csv")
write.csv(of_interest$ftp_path, file = "genomes_of_interest.csv", row.names = F)
write.csv(of_interest$ftp_path, file = "genomes_of_interest.csv", row.names = F, col.names = F, quote = F)
write.table(of_interest$ftp_path, file = "genomes_of_interest.csv", row.names = F, col.names = F, quote = F)
version = 0.1
# From the list of sequenced genomes from the NCBI FTP site, extract ones to search for the RBHs from
require(data.table)
search_term<-"Escherichia"
setwd("~/")
system("wget ftp://ftp.ncbi.nlm.nih.gov/genomes/genbank/bacteria/assembly_summary.txt")
raw_summaries<-fread("assembly_summary.txt", skip = 1)
full<-raw_summaries[raw_summaries$genome_rep == "Full"]
complete<- full[!full$assembly_level %in% c("Contig", "Scaffold"),]
not_excluded<-complete[complete$excluded_from_refseq == "",]
of_interest <-not_excluded[grepl(search_term, not_excluded$organism_name),]
write.table(of_interest$ftp_path, file = "genomes_of_interest.txt", row.names = F, col.names = F, quote = F)
of_interest$ftp_path
??makedir
write.table(head(of_interest$ftp_path), file = "genomes_of_interest.txt", row.names = F, col.names = F, quote = F)
write.table(head(of_interest$ftp_path, 2), file = "genomes_of_interest.txt", row.names = F, col.names = F, quote = F)
i=of_interest$ftp_path[0]
of_interest$ftp_path
of_interest$ftp_path[1]
i = of_interest$ftp_path[1]
gsub("(.*)/(.*$)", "\\2", i)
file <- paste0(i, gsub("(.*)/(.*$)", "\\2", i), "_genomic.fna.gz") # or _genomic.gbff.gz
outfile <- paste0(output_dir, gsub("(.*)/(.*$)", "\\2", i), "_genomic.fna.gz") # or _genomic.gbff.gz
output_dir<-"./results/"
outfile <- paste0(output_dir, gsub("(.*)/(.*$)", "\\2", i), "_genomic.fna.gz") # or _genomic.gbff.gz
file
system(paste0("wget ",file, " -O ", outfile)
system(paste0("wget ",file, " -O ", outfile))
path.expand(".\")
path.expand("./")
path.expand(".//")
path.expand("~/")
path.expand("./")
getwd()
outfile <- paste0(getwd(), gsub("(.*)/(.*$)", "\\2", i), "_genomic.fna.gz") # or _genomic.gbff.gz
system(paste0("wget ",file, " -O ", outfile))
outfile <- paste0(getwd(), "\\",gsub("(.*)/(.*$)", "\\2", i), "_genomic.fna.gz") # or _genomic.gbff.gz
system(paste0("wget ",file, " -O ", outfile))
outfile <- paste0(getwd(), "\\",gsub("(.*)/(.*$)", "\\2", i), "_genomic.fna.gz") # or _genomic.gbff.gz
outfile
outfile <- paste0(getwd(), "/",gsub("(.*)/(.*$)", "\\2", i), "_genomic.fna.gz") # or _genomic.gbff.gz
system(paste0("wget ",file, " -O ", outfile))
file
file <- paste0(i, "/", gsub("(.*)/(.*$)", "\\2", i), "_genomic.fna.gz") # or _genomic.gbff.gz
outfile <- paste0(getwd(), "/",gsub("(.*)/(.*$)", "\\2", i), "_genomic.fna.gz") # or _genomic.gbff.gz
system(paste0("wget ",file, " -O ", outfile))
write.table(of_interest$ftp_path, file = "genomes_of_interest.txt", row.names = F, col.names = F, quote = F)
require()ggplot2
require(ggplot2)
data  = data.frame("strain"=c("Lys9", "BW","SE11"), "ref_cov"=c(100, 98.4, 98.3), "library_mean_mapping"=c(98.9, 99.1, 91.0))
require(reshape2)
melted=melt(data = data, id.vars = "strain", variable.name = "metric", value.name = "Percentage")
ggplot(melted, aes(x=strain, y=ref_cov))+geom_point()
ggplot(melted, aes(x="strain", y="ref_cov"))+geom_point()
melted
ggplot(melted, aes(x=strain, y=Percentage))+geom_point()
ggplot(melted, aes(x=strain, y=Percentage))+geom_point() + theme_bw()
ggplot(melted, aes(x=strain, y=Percentage))+geom_point() + facet_grid(~metric)
ggplot(melted, aes(x=strain, y=Percentage))+geom_point() + facet_grid(~metric)+coord_cartesian(xlim = c(0,100))
ggplot(melted, aes(x=strain, y=Percentage))+geom_point() + facet_grid(~metric)+coord_cartesian(ylim = c(0,100))
ggplot(melted, aes(x=strain, y=Percentage))+geom_point() + facet_grid(~metric)+coord_cartesian(ylim = c(50,100))
require(data.table)
search_term<-"Escherichia"
get_from_R<-F
setwd("~/")
system("wget ftp://ftp.ncbi.nlm.nih.gov/genomes/genbank/bacteria/assembly_summary.txt")
raw_summaries<-fread("assembly_summary.txt", skip = 1)
head(raw_summaries)
table(raw_summaries$genome_rep)
table(raw_summaries$assembly_level)
12*11*10
?choose
??choose
choose(12,3)
choose(3,12)
choose(3,2)
require(ggplot2)
data <- read.csv("~/sample_msa_entropy.csv")
str(data)
plot(data)
data[,2]
data[,2]<-0:length(data)
data[,2]<-(0:length(data))
data$X1<-(0:length(data))
0:length(data)
data[,2]<-(0:nrow(data))
data[,2]<-(1:nrow(data))
str(data)
ggplot(data, aes(x=V2, y=X0))+geom_point()
ggplot(data, aes(x=V2, y=X0))+geom_line()
data <- read.csv("~/GitHub/riboSeed/testtemp.txt", stringsAsFactors = F)
ggplot(data, aes(x=position, y=ent))+ geom_point()
ggplot(data, aes(x=position, y=ent))+ geom_line()
ggplot(data, aes(x=position, y=ent))+ geom_bar(stat="identity", position="dodge")
ggplot(data, aes(x=position, y=ent))+ geom_bar(stat="identity", position="dodge")+labs(main="entropy by position")
ggplot(data, aes(x=position, y=ent))+ geom_bar(stat="identity", position="dodge")+labs(title="entropy by position", y="Shannon Entropy")
data <- read.csv("~/GitHub/riboSeed/testtemp.txt", stringsAsFactors = F)
data <- read.csv("~/GitHub/riboSeed/testtemp.txt", stringsAsFactors = F)
plot(data)
?plot
png(filename="name.png")
plot(data)
dev.off()
getwd()
data <- read.csv('/home/nicholas/GitHub/riboSeed/entropy_plot.csv', stringsAsFactors = F)
plot(data, cex=.5)
plot(data, cex=.5, pch=18)
axis(2, at=x,labels=x, col.axis="red", las=2)
axis(2, col.axis="red", las=2)
plot(data, cex=.5, pch=18)
axis(2, col.axis="red", las=2)
plot(data, cex=.5, pch=18, las=2, xaxt="n", yaxt="n")
plot(data, cex=.5, pch=18, las=2, xaxt="n", yaxt="n")
dev.off()
plot(data, cex=.5, pch=18, las=2, axes=FALSE)
axis(2,at=x, label=data, col.axis="red")
axis(2,at=data, label=data, col.axis="red")
dev.off()
plot(x, y, cex=.5, pch=18, las=2, axes=FALSE)
x<-data[,0]
y<-data[,1]
plot(x, y, cex=.5, pch=18, las=2, axes=FALSE)
x<-as.list(data[,0])
y<-as.list(data[,1])
plot(x, y, cex=.5, pch=18, las=2, axes=FALSE)
x
y
plot(data[,0], data[,1], cex=.5, pch=18, las=2, axes=FALSE)
plot(data, cex=.5, pch=18, las=2, axes=FALSE)
?axis()
axis(2, label=data, col.axis="red")
axis(2, col.axis="red")
dev.off()
plot(data, cex=.5, pch=18, las=2, axes=FALSE)
axis(2, col="red")
plot(data, cex=.5, pch=18, las=2, axes=FALSE)
axis(2, col="darkgrey")
axis(1, col="darkgrey")
plot(data, cex=.5, pch=18, las=2, axes=FALSE, xaxs="i", yaxs="i")
axis(1, col="darkgrey")
axis(2, col="darkgrey")
plot(data, cex=.5, pch=18, axes=FALSE, xaxs="i", yaxs="i")
axis(2, col="darkgrey")
axis(1, col="darkgrey")
plot(data, cex=.1, pch=18, axes=FALSE, xaxs="i", yaxs="i")
axis(2, col="darkgrey")
axis(1, col="darkgrey")
plot(data, cex=1, pch=18, axes=FALSE, xaxs="i", yaxs="i")
axis(2, col="darkgrey")
axis(1, col="darkgrey")
plot(data, cex=1, pch=18, axes=FALSE, xaxs="i", yaxs="i", ylim=c(0, 2))
axis(2, col="darkgrey")
axis(1, col="darkgrey")
plot(data, cex=.75, pch=18, axes=FALSE, xaxs="i", yaxs="i", ylim=c(-.2, 2))
axis(2, col="darkgrey")
plot(data, cex=.75, pch=18, axes=FALSE, xaxs="i", yaxs="i", ylim=c(-5, 2))
axis(2, col="darkgrey")
axis(1, col="darkgrey")
plot(data, cex=.75, pch=18, axes=FALSE, xaxs="i", yaxs="i", ylim=c(-1, 2))
axis(2, col="darkgrey")
axis(1, col="darkgrey")
plot(data, cex=.75, pch=18, axes=FALSE, xaxs="i", yaxs="i", ylim=c(-.5, 2))
axis(2, col="darkgrey")
axis(1, col="darkgrey")
plot(data, cex=.75, pch=18, axes=FALSE, xaxs="i", yaxs="i", ylim=c(-.2, 2))
axis(2, col="darkgrey")
axis(1, col="darkgrey")
plot(data, cex=.75, pch=18, axes=FALSE, xaxs="i", yaxs="i", ylim=c(-.1, 2))
axis(2, col="darkgrey")
axis(1, col="darkgrey")
plot(data, cex=.75, pch=18, axes=FALSE, xaxs="i", yaxs="i", ylim=c(-.2, 2))
axis(2, col="darkgrey")
axis(1, col="darkgrey")
plot(data, cex=.75, pch=18, axes=FALSE, xaxs="i", yaxs="i", ylim=c(-.3, 2))
axis(2, col="darkgrey")
axis(1, col="darkgrey")
plot(data, cex=.75, pch=18, axes=FALSE, xaxs="i", yaxs="i", ylim=c(0, 2))
axis(2, col="darkgrey")
axis(1, col="darkgrey", axis.col="black")
axis(1, col="darkgrey", col.ticks="black")
plot(data, cex=.75, pch=18, axes=FALSE, xaxs="i", yaxs="i", ylim=c(0, 2))
axis(2, col="darkgrey")
axis(1, col="white", col.ticks="black")
dev.off()
axis(2, col="darkgrey")
plot()
plot(data, cex=.75, pch=18, axes=FALSE, xaxs="i", yaxs="i", ylim=c(0, 2))
axis(2, col="darkgrey")
axis(1, col="white", col.ticks="black")
dev.off()
plot(data, cex=.75, pch=18, axes=FALSE, xaxs="i", yaxs="i", ylim=c(0, 2))
axis(2, col="darkgrey")
axis(1, col="darkgrey")
dev.off()
par(mar=c(5, 4, 4, 8) + 0.1)
axis(2, col="darkgrey")
plot(data, cex=.75, pch=18, axes=FALSE, xaxs="i", yaxs="i", ylim=c(0, 2))
axis(2, col="darkgrey")
axis(1, col="darkgrey")
dev.off()
plot(data, cex=.75, pch=18, axes=FALSE, xaxs="i", yaxs="i", ylim=c(0, 2))
axis(2, col="darkgrey")
axis(1, col="darkgrey")
plot(data, cex=.75, pch=18, axes=FALSE, xaxs="i", yaxs="i", ylim=c(0, 2))
axis(2, col="darkgrey")
axis(1, col="darkgrey")
title("Shannon Entropy", xlab="Position (bp)",
ylab="Entropy")
dev.off()
plot(data, cex=.75, pch=18, axes=FALSE, xaxs="i", yaxs="i", ylim=c(0, 2), xlab="", ylab="")
axis(2, col="darkgrey")
axis(1, col="darkgrey")
title("Shannon Entropy", xlab="Position (bp)",
ylab="Entropy")
?pdf
plot(data, cex=.75, pch=18, axes=FALSE, xaxs='i', yaxs='i', ylim=c(-1, 2), xlab='', ylab='')
axis(2, col='darkgrey')
axis(1, col='darkgrey')
plot(data, cex=.75, pch=18, axes=FALSE, xaxs='i', yaxs='i', ylim=c(-.5, 2), xlab='', ylab='')
axis(2, col='darkgrey')
axis(1, col='darkgrey')
title('Shannon Entropy', xlab='Position (bp)', ylab='Entropy')
plot(data, cex=.75, pch=18, axes=FALSE, xaxs='i', yaxs='i', ylim=c(-.25, 2), xlab='', ylab='')
axis(2, col='darkgrey')
axis(1, col='darkgrey')
plot(data, cex=.75, pch=18, axes=FALSE, xaxs='i', yaxs='i', ylim=c(-.2, 2), xlab='', ylab='')
axis(2, col='darkgrey')
axis(1, col='darkgrey')
title('Shannon Entropy', xlab='Position (bp)', ylab='Entropy')
plot(data, cex=.75, pch=18, axes=FALSE, xaxs='i', yaxs='i', ylim=c(-.1, 2), xlab='', ylab='')
axis(2, col='darkgrey')
axis(1, col='darkgrey')
title('Shannon Entropy', xlab='Position (bp)', ylab='Entropy')
plot(data, cex=.75, pch=18, axes=FALSE, xaxs='i', yaxs='i', ylim=c(-0.1, 2), xlab='', ylab='')
data <- read.csv('./temptemp_coli/entropy_plot.csv', stringsAsFactors = F)
setwd("~/GitHub/riboSeed/")
data <- read.csv('./temptemp_coli/entropy_plot.csv', stringsAsFactors = F)
plot(data, cex=.75, pch=18, axes=FALSE, xaxs='i', yaxs='i', ylim=c(-0.1, 2), xlab='', ylab='')
mtext("y=1/x", side=4, line=3, cex.lab=1,las=2, col="blue")
axis(2, col='darkgrey')
axis(1, col='darkgrey')
title('Shannon Entropy', xlab='Position (bp)', ylab='Entropy')
mtext("y=1/x", side=4, line=3, cex.lab=1,las=2, col="blue")
mtext("y=1/x", side=1, line=3, cex.lab=1,las=2, col="blue")
mtext("y=1/x", side=2, line=3, cex.lab=1,las=2, col="blue")
mtext("y=1/x", side=3, line=3, cex.lab=1,las=2, col="blue")
mtext("y=1/x", side=3, line=2, cex.lab=1,las=2, col="blue")
mtext("y=1/x", side=3, line=1, cex.lab=1,las=2, col="blue")
mtext("y=1/x", side=3, line=1, cex.lab=1,las=1, col="blue")
dev.off()
plot(data, cex=.75, pch=18, axes=FALSE, xaxs='i', yaxs='i', ylim=c(-0.1, 2), xlab='', ylab='')
mtext("y=1/x", side=3, line=1, cex.lab=1,las=1, col="blue")
axis(2, col='darkgrey')
axis(1, col='darkgrey')
title('Shannon Entropy', xlab='Position (bp)', ylab='Entropy')
mtext("{0}", side=3, line=1, cex.lab=1,las=1, col="darkdarkgrey")
mtext("{0}", side=3, line=1, cex.lab=1,las=1, col="darkgrey")
mtext("{0}", side=3, line=1, cex.lab=1,las=1, col=160)
mtext("{0}", side=3, line=1, cex.lab=1,las=1, col=155)
dev.off()
plot(data, cex=.75, pch=18, axes=FALSE, xaxs='i', yaxs='i', ylim=c(-0.1, 2), xlab='', ylab='')
mtext("{0}", side=3, line=1, cex.lab=1,las=1, col=155)
mtext("{0}", side=3, line=1, cex.lab=1,las=1, col=156)
mtext("{0}", side=3, line=1, cex.lab=1,las=1, col=15)
dev.off()
mtext("{0}", side=3, line=1, cex.lab=1,las=1, col=15)
plot(data, cex=.75, pch=18, axes=FALSE, xaxs='i', yaxs='i', ylim=c(-0.1, 2), xlab='', ylab='')
mtext("{0}", side=3, line=1, cex.lab=1,las=1, col="charcoal")
mtext("{0}", side=3, line=1, cex.lab=1,las=1, col="#34282C")
axis(2, col='darkgrey')
axis(1, col='darkgrey')
title('Shannon Entropy', xlab='Position (bp)', ylab='Entropy')
dev.off()
plot(data, cex=.75, pch=18, axes=FALSE, xaxs='i', yaxs='i', ylim=c(-0.1, 2), xlab='', ylab='')
mtext("{0}", side=3, line=1, cex.lab=1,las=1, col="#34282C")
axis(2, col='darkgrey')
axis(1, col='darkgrey')
title('Shannon Entropy', xlab='Position (bp)', ylab='Entropy')
mtext("{0}", side=3, line=2, cex.lab=1,las=1, col="#34282C")
mtext("{0}", side=3, line=0, cex.lab=1,las=1, col="#34282C")
mtext("{0}", side=3, line=0.5, cex.lab=1,las=1, col="#34282C")
